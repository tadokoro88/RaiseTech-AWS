version: 2.1

orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@3.1.4
  ansible-playbook: orbss/ansible-playbook@0.0.5
  ruby: circleci/ruby@2.0.0

jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml

  cfn_execute:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/install
      - run:
          name: token and deploy
          command: |
            # use the OpenID Connect token to obtain AWS credentials
            read -r AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN \<<< \
              $(aws sts assume-role-with-web-identity \
               --role-arn ${AWS_ROLE_ARN} \
               --role-session-name "CircleCI-${CIRCLE_WORKFLOW_ID}-${CIRCLE_JOB}" \
               --web-identity-token $CIRCLE_OIDC_TOKEN \
               --duration-seconds 3600 \
               --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
               --output text)
            export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
            # interact with AWS
            aws --no-cli-pager sts get-caller-identity
            # CloudFormation deploy
            aws cloudformation deploy \
            --stack-name lecture13 \
            --template-file cloudformation/cfn_ansible.yml \

  ansible_execute:
    executor: ansible-playbook/default
    steps:
      - checkout
      - ansible-playbook/install
      - add_ssh_keys:
          fingerprints:
            - "${KEY_FINGERPRINT}"
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: "-i ansible/inventory -u ec2-user"

  serverspec_execute:
    executor: ruby/default
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: rake spec
          command: |
            cd spec
            rake spec

workflows:
  lecture13:
    jobs:
      - cfn-lint
      - cfn_execute:
          requires: 
            - cfn-lint
          context: lecture13
      - ansible_execute:
          requires:
            - cfn_execute
          context: lecture13
      - serverspec_execute:
          requires:
            - ansible_execute
          context: lecture13
